# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-22 21:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('species', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Climate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CookingMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.IntegerField(choices=[(1, 'APAC'), (2, 'LatAm'), (3, 'South Asia'), (4, 'Asia'), (5, 'Africa')])),
                ('name', models.CharField(max_length=250)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CRP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='EthnicGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='FcaCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scientific_name2', models.CharField(blank=True, max_length=450, null=True)),
                ('species_english_name', models.CharField(blank=True, max_length=450, null=True)),
                ('species_french_name', models.CharField(blank=True, max_length=450, null=True)),
                ('species_vernacular_name', models.CharField(blank=True, max_length=450, null=True)),
                ('fca_cultivated', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('fca_sold', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('fca_purchased', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('fca_consumed', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('presence_cultivated', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1')], null=True)),
                ('presence_sold', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1')], null=True)),
                ('presence_purchased', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1')], null=True)),
                ('presence_consumed', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1')], null=True)),
                ('source', models.IntegerField(blank=True, choices=[(1, 'Cultivated/Reared'), (2, 'Wild'), (3, 'Mixed/Both')], null=True)),
                ('season', models.CharField(blank=True, choices=[('L', 'Lean'), ('A', 'All year')], max_length=2, null=True)),
                ('off_season', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True)),
                ('lean_season', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True)),
                ('uses', models.CharField(blank=True, max_length=450, null=True)),
                ('cooking_method', models.CharField(blank=True, max_length=450, null=True)),
            ],
            options={
                'verbose_name': 'FCA Codes',
                'verbose_name_plural': 'FCA Codes',
            },
        ),
        migrations.CreateModel(
            name='FocusGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('hh', models.CharField(blank=True, max_length=250, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('frecuency', models.CharField(blank=True, max_length=250, null=True)),
                ('year_round', models.CharField(blank=True, max_length=250, null=True)),
                ('lean_season', models.CharField(blank=True, max_length=250, null=True)),
                ('climate', models.CharField(blank=True, max_length=250, null=True)),
                ('population', models.FloatField(blank=True, null=True)),
                ('market_distance', models.TextField(blank=True, help_text='in km', null=True)),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'Female'), (2, 'Male'), (3, 'Both')], null=True)),
                ('method_observations', models.TextField(blank=True, null=True)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Community')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Country')),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.County')),
                ('crp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.CRP')),
                ('ethnic_group', models.ManyToManyField(blank=True, to='focusgroups.EthnicGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PartUsed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Scientists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Uses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.AddField(
            model_name='focusgroup',
            name='language',
            field=models.ManyToManyField(blank=True, to='focusgroups.Language'),
        ),
        migrations.AddField(
            model_name='focusgroup',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Organizations'),
        ),
        migrations.AddField(
            model_name='focusgroup',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Province'),
        ),
        migrations.AddField(
            model_name='focusgroup',
            name='scientist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Scientists'),
        ),
        migrations.AddField(
            model_name='fcacode',
            name='focus_groups',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='focusgroups.FocusGroup'),
        ),
        migrations.AddField(
            model_name='fcacode',
            name='parts_used',
            field=models.ManyToManyField(blank=True, to='focusgroups.PartUsed'),
        ),
        migrations.AddField(
            model_name='fcacode',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='species.Species'),
        ),
        migrations.AddField(
            model_name='county',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.Province'),
        ),
        migrations.AddField(
            model_name='community',
            name='county',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focusgroups.County'),
        ),
    ]
